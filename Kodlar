useEffect(() => {
  if (data.length === 0) return;

  const svg = d3.select(svgRef.current);
  svg.selectAll('*').remove(); // Önceki içerikleri temizle

  const margin = { top: 20, right: 0, bottom: 20, left: 100 };    
  const width = svg.node().getBoundingClientRect().width - margin.left / 2;
  const height = 500;

  svg
    .attr("width", width)
    .attr("height", height);

  const xScale = d3.scaleLinear()
    .domain([0, d3.max(data, (d) => d.value)])
    .range([0, width - margin.left - margin.right]);

  // Bar yüksekliğini sabit tutuyoruz
  const barHeight = 30;

  // Y ekseninin scale'ini oluşturuyoruz ve padding ile barlar arasındaki mesafeyi kontrol ediyoruz
  const yScale = d3.scaleBand()
    .domain(data.map((d) => d.name))
    .range([margin.top, height - margin.bottom]) // Y ekseninin range'ini margin ile ayarlıyoruz
    .padding(0.4) // Barlar arasındaki mesafeyi artırmak için padding
    .bandwidth(barHeight); // Bar yüksekliğini sabitliyoruz

  // Grafik alanını oluşturma
  const g = svg.append("g")
    .attr("transform", `translate(${margin.left},${margin.top})`);

  // X eksenini ekliyoruz
  g.append("g")
    .attr("class", "x-axis")
    .attr("transform", `translate(0,${height - margin.bottom})`)
    .call(d3.axisBottom(xScale).ticks(0));

  // Y eksenini ekliyoruz
  g.append("g")
    .attr("class", "y-axis")
    .call(d3.axisLeft(yScale));

  // Barları ekliyoruz ve her barın yüksekliğini 30 olarak sabitliyoruz
  const bars = g.selectAll(".bar")
    .data(data);

  bars.enter()
    .append("rect")
    .attr("class", "bar")
    .attr("x", 0) // Yalnızca X koordinatı
    .attr("y", (d) => yScale(d.name)) // Y konumu, her barın konumu
    .attr("width", (d) => xScale(d.value)) // Barın genişliği
    .attr("height", barHeight) // Sabit bar yüksekliği
    .attr("fill", "steelblue");

  // Her barın sağına değerleri yazıyoruz
  bars.enter()
    .append("text")
    .attr("class", "value")
    .attr("x", (d) => xScale(d.value) + 5) // Çubuğun sağında değer
    .attr("y", (d) => yScale(d.name) + barHeight / 2) // Barın ortasında değeri göstermek için
    .attr("dy", ".35em")
    .text((d) => d.value.toFixed(2)); // Değerlerin gösterimi

}, [data]);
