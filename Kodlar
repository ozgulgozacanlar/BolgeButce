import React, { useRef, useEffect, useState } from "react";
import * as d3 from "d3";

const BarChart = () => {
  const svgRef = useRef();
  const [data, setData] = useState([]);

  // Veriyi oluşturuyoruz (22 değerli örnek veri)
  useEffect(() => {
    const generateData = Array.from({ length: 22 }, (_, i) => ({
      name: `Değer ${i + 1}`,
      value: Math.random() * 100,
    }));
    setData(generateData);
  }, []);

  // Grafik çizim fonksiyonu
  useEffect(() => {
    if (data.length === 0) return;

    const width = 800;
    const height = 500;

    const svg = d3.select(svgRef.current)
      .attr("width", width)
      .attr("height", height);

    const xScale = d3.scaleLinear()
      .domain([0, d3.max(data, (d) => d.value)])
      .range([0, width - 40]);

    const yScale = d3.scaleBand()
      .domain(data.map((d) => d.name))
      .range([0, height])
      .padding(0.1);

    // Bar çubuklarını ve değerleri çiziyoruz
    const bars = svg.selectAll(".bar")
      .data(data, (d) => d.name);

    bars.enter()
      .append("rect")
      .attr("class", "bar")
      .attr("x", 0)
      .attr("y", (d) => yScale(d.name))
      .attr("width", (d) => xScale(d.value))
      .attr("height", yScale.bandwidth())
      .attr("fill", "steelblue");

    bars.enter()
      .append("text")
      .attr("class", "value")
      .attr("x", (d) => xScale(d.value) + 5)
      .attr("y", (d) => yScale(d.name) + yScale.bandwidth() / 2)
      .attr("dy", ".35em")
      .text((d) => d.value.toFixed(2));

    // Çubuğun sağındaki değerler için yazıyı yerleştiriyoruz
  }, [data]);

  return (
    <div className="chart-container" style={{ width: "100%", height: "500px", overflowY: "scroll" }}>
      <svg ref={svgRef}></svg>
    </div>
  );

.chart-container {
  width: 100%;
  height: 500px;
  overflow-y: scroll; /* Yatay kaydırma işlevi */
  border: 1px solid #ccc;
}

.bar {
  fill: steelblue;
}

.value {
  font-size: 14px;
  fill: black;
  text-anchor: start;
}

.bar-label {
  font-size: 14px;
  fill: white;
  text-anchor: middle;
}
};

export default BarChart;
